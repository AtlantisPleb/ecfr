{
  "openapi": "3.0.0",
  "info": {
    "title": "eCFR API Documentation - Versioner Service",
    "version": "1.0.0",
    "description": "API for accessing Electronic Code of Federal Regulations - Versioner Service endpoints"
  },
  "servers": [
    {
      "url": "https://www.ecfr.gov"
    }
  ],
  "tags": [
    {
      "name": "Versioner Service",
      "description": "Access CFR content and structure files through JSON and XML"
    }
  ],
  "paths": {
    "/api/versioner/v1/ancestry/{date}/title-{title}.json": {
      "get": {
        "summary": "Ancestors route returns all ancestors from a given level through the top title node",
        "description": "The Ancestry service can be used to determine the complete ancestry to a leaf node at a specific point in time.\n### Example\nThe complete hierarchy for **2 CFR 1532.137** is\n```\nTitle 2\n Subtitle B\n Chapter XV\n Part 1532\n Subpart A\n Section 1532.137\n```\nTo retrieve this complete hierarchy you can use the ancestry endpoint and provide a Title, Part and Section (you can provide additional layers of the hierarchy) to retrieve a full ancestry.",
        "tags": [
          "Versioner Service"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "YYYY-MM-DD",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "title",
            "in": "path",
            "description": "Title Number: '1', '2', '50', etc",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtitle",
            "in": "query",
            "description": "Uppercase letter. 'A', 'B', 'C'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chapter",
            "in": "query",
            "description": "Roman Numerals and digits 0-9. 'I', 'X', '1'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subchapter",
            "in": "query",
            "description": "A SUBCHAPTER REQUIRES A CHAPTER. Uppercase letters with optional underscore or dash. 'A', 'B', 'I'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "part",
            "in": "query",
            "description": "Uppercase letters with optional underscore or dash. 'A', 'B', 'I'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subpart",
            "in": "query",
            "description": "A SUBPART REQUIRES A PART. Generally an uppercase letter. 'A', 'B', 'C'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "section",
            "in": "query",
            "description": "A SECTION REQUIRES A PART. Generally a number followed by a dot and another number. '121.1', '13.4', '1.9'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appendix",
            "in": "query",
            "description": "AN APPENDIX REQUIRES A SUBTITLE, CHAPTER or PART. Multiple formats. 'A', 'III', 'App. A'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HierarchyNode"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid input or missing some hierarchy"
          }
        }
      }
    },
    "/api/versioner/v1/full/{date}/title-{title}.xml": {
      "get": {
        "summary": "Source XML for a title or subset of a title",
        "description": "The title source route can be used to retrieve the source xml for a complete title or subset. The subset of xml is determined by the lowest leaf node given. For example, if you request Title 1, Chapter I, Part 1, you'll receive the XML only for Part 1 and its children.\nIf you request a section you'll receive the section XML inside its parent Part as well as relevant non-section sibling nodes (Auth, Source, etc).\nThe largest title source xml files can be dozens of megabytes.\n\n[GPO eCFR XML User guide](https://github.com/usgpo/bulk-data/blob/master/ECFR-XML-User-Guide.md)\n",
        "tags": [
          "Versioner Service"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "YYYY-MM-DD",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "title",
            "in": "path",
            "description": "Title Number: '1', '2', '50', etc",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subtitle",
            "in": "query",
            "description": "Uppercase letter. 'A', 'B', 'C'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chapter",
            "in": "query",
            "description": "Roman Numerals and digits 0-9. 'I', 'X', '1'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subchapter",
            "in": "query",
            "description": "A SUBCHAPTER REQUIRES A CHAPTER. Uppercase letters with optional underscore or dash. 'A', 'B', 'I'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "part",
            "in": "query",
            "description": "Uppercase letters with optional underscore or dash. 'A', 'B', 'I'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subpart",
            "in": "query",
            "description": "A SUBPART REQUIRES A PART. Generally an uppercase letter. 'A', 'B', 'C'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "section",
            "in": "query",
            "description": "A SECTION REQUIRES A PART. Generally a number followed by a dot and another number. '121.1', '13.4', '1.9'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appendix",
            "in": "query",
            "description": "AN APPENDIX REQUIRES A SUBTITLE, CHAPTER or PART. Multiple formats. 'A', 'III', 'App. A'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A downloadable Title XML document for entire Title requests or processed XML for part level and below requests.",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad parameter: invalid date."
          },
          "404": {
            "description": "No matching content found."
          }
        }
      }
    },
    "/api/versioner/v1/structure/{date}/title-{title}.json": {
      "get": {
        "summary": "Structure JSON for a title",
        "description": "The structure JSON endpoint returns the complete structure of a title back as json. This format does not include the content of the title but does include all structure and content nodes as well as their meta data including their type, label, description, identifier and children.",
        "tags": [
          "Versioner Service"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "YYYY-MM-DD",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "title",
            "in": "path",
            "description": "Title Number: '1', '2', '50', etc",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TitleStructure"
                }
              }
            }
          },
          "404": {
            "description": "Invalid input."
          }
        }
      }
    },
    "/api/versioner/v1/titles.json": {
      "get": {
        "summary": "Summary information about each title",
        "description": "The Title service can be used to determine the status of each individual title and of the overall status of title imports and reprocessings. It returns an array of all titles containing a hash for each with the name of the title, the latest amended date, latest issue date, up-to-date date, reserved status, and if applicable, processing in progress status. The meta data returned indicates the latest issue date and whether titles are currently being reprocessed.",
        "tags": [
          "Versioner Service"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "titles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TitleSummary"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string",
                          "format": "date"
                        },
                        "import_in_progress": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HierarchyNode": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "title",
              "subtitle",
              "chapter",
              "part",
              "subpart",
              "section"
            ]
          },
          "label": {
            "type": "string"
          },
          "label_level": {
            "type": "string"
          },
          "label_description": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "reserved": {
            "type": "boolean"
          },
          "section_range": {
            "type": "string"
          }
        }
      },
      "TitleStructure": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "label_level": {
            "type": "string"
          },
          "label_description": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TitleStructure"
            }
          }
        }
      },
      "TitleSummary": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "latest_amended_on": {
            "type": "string",
            "format": "date"
          },
          "latest_issue_date": {
            "type": "string",
            "format": "date"
          },
          "up_to_date_as_of": {
            "type": "string",
            "format": "date"
          },
          "reserved": {
            "type": "boolean"
          },
          "processing_in_progress": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
